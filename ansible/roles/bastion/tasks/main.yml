- name: Create dirs
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /etc/nginx
    - /etc/nginx/conf.d
    - /etc/nginx/snippets
    - /etc/nginx/tls
    - "{{ ssl_dir }}"
    - /var/log/nginx
    - /opt/gateway
    - /srv/files
    - /srv/webapps
    #- /srv/www
    #- /srv/nas
    #- /srv/share

- name: Check if cert already exists
  stat:
    path: "{{ ssl_cert }}"
  register: cert_stat

- name: Generate self-signed cert (if missing)
  command: >
    openssl req -x509 -nodes -newkey rsa:4096
    -subj "/CN={{ domain_name }}"
    -days 365
    -keyout {{ ssl_key }}
    -out {{ ssl_cert }}
  args:
    creates: "{{ ssl_cert }}"
  when: not cert_stat.stat.exists

- name: Push nginx configs
  template:
    src: "{{ item.src }}"
    dest: "/etc/nginx/{{ item.path | regex_replace('\\.j2$', '') }}"
    owner: root
    group: root
    mode: '0644'
    force: yes
  with_filetree: "templates/nginx/"
  when: item.state == 'file'
  notify: Reload nginx docker
  tags: nginx

- name: Drop compose
  template:
    src: docker-compose.yml.j2
    dest: /opt/gateway/docker-compose.yml
    mode: "0644"
  notify: Reload nginx docker
  tags: nginx

- name: Check if rp-nginx container is running
  command: docker ps --filter "name=rp-nginx" --filter "status=running" --format "{{'{{.Names}}'}}"
  register: rp_nginx_ps
  changed_when: false

- name: Bring up gateway stack
  shell: docker compose up -d
  args:
    chdir: /opt/gateway
  when: rp_nginx_ps.stdout == ""

- name: Wait for nginx listening on 80
  wait_for:
    host: "{{ ansible_host }}"   # or {{ ansible_host }}
    port: 80
    delay: 2
    timeout: 120
  tags: nginx

- name: Validate nginx syntax (post-start)
  shell: docker exec rp-nginx nginx -t
  register: ngchk
  failed_when: ngchk.rc != 0
  tags: nginx
  changed_when: false

- name: Mount NAS Webapp Share
  import_tasks: ../../misc/tasks/install_nas_reqs.yml
  vars:
    local_mount_path: /srv/www
    nas_share_path: /mnt/user/Server_WebappsCache
    mount_opts: "{{ bastion_mount_opts }}"

- name: Mount NAS Webapp Share
  import_tasks: ../../misc/tasks/install_nas_reqs.yml
  vars:
    local_mount_path: /srv/nas
    nas_share_path: /mnt/user/Server_WebappsArray
    mount_opts: "{{ bastion_mount_opts }}"

- name: Mount NAS Public Share
  import_tasks: ../../misc/tasks/install_nas_reqs.yml
  vars:
    local_mount_path: /srv/share
    nas_share_path: /mnt/user/Public
    mount_opts: "{{ bastion_mount_opts }}"